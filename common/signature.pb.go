// Copyright Â© 2019 Binance
//
// This file is part of Binance. The full Binance copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: protob/signature.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Container for output signatures, mostly used for marshalling this data structure to a mobile app
type SignatureData struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Signature []byte                 `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// Ethereum-style recovery byte; only the first byte is relevant
	SignatureRecovery []byte `protobuf:"bytes,2,opt,name=signature_recovery,json=signatureRecovery,proto3" json:"signature_recovery,omitempty"`
	// Signature components R, S
	R []byte `protobuf:"bytes,3,opt,name=r,proto3" json:"r,omitempty"`
	S []byte `protobuf:"bytes,4,opt,name=s,proto3" json:"s,omitempty"`
	// M represents the original message digest that was signed M
	M             []byte `protobuf:"bytes,5,opt,name=m,proto3" json:"m,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignatureData) Reset() {
	*x = SignatureData{}
	mi := &file_protob_signature_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignatureData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureData) ProtoMessage() {}

func (x *SignatureData) ProtoReflect() protoreflect.Message {
	mi := &file_protob_signature_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureData.ProtoReflect.Descriptor instead.
func (*SignatureData) Descriptor() ([]byte, []int) {
	return file_protob_signature_proto_rawDescGZIP(), []int{0}
}

func (x *SignatureData) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SignatureData) GetSignatureRecovery() []byte {
	if x != nil {
		return x.SignatureRecovery
	}
	return nil
}

func (x *SignatureData) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *SignatureData) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *SignatureData) GetM() []byte {
	if x != nil {
		return x.M
	}
	return nil
}

var File_protob_signature_proto protoreflect.FileDescriptor

const file_protob_signature_proto_rawDesc = "" +
	"\n" +
	"\x16protob/signature.proto\x12\x0ebinance.tsslib\"\x86\x01\n" +
	"\rSignatureData\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\fR\tsignature\x12-\n" +
	"\x12signature_recovery\x18\x02 \x01(\fR\x11signatureRecovery\x12\f\n" +
	"\x01r\x18\x03 \x01(\fR\x01r\x12\f\n" +
	"\x01s\x18\x04 \x01(\fR\x01s\x12\f\n" +
	"\x01m\x18\x05 \x01(\fR\x01mB\n" +
	"Z\b./commonb\x06proto3"

var (
	file_protob_signature_proto_rawDescOnce sync.Once
	file_protob_signature_proto_rawDescData []byte
)

func file_protob_signature_proto_rawDescGZIP() []byte {
	file_protob_signature_proto_rawDescOnce.Do(func() {
		file_protob_signature_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protob_signature_proto_rawDesc), len(file_protob_signature_proto_rawDesc)))
	})
	return file_protob_signature_proto_rawDescData
}

var file_protob_signature_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_protob_signature_proto_goTypes = []any{
	(*SignatureData)(nil), // 0: binance.tsslib.SignatureData
}
var file_protob_signature_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protob_signature_proto_init() }
func file_protob_signature_proto_init() {
	if File_protob_signature_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protob_signature_proto_rawDesc), len(file_protob_signature_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protob_signature_proto_goTypes,
		DependencyIndexes: file_protob_signature_proto_depIdxs,
		MessageInfos:      file_protob_signature_proto_msgTypes,
	}.Build()
	File_protob_signature_proto = out.File
	file_protob_signature_proto_goTypes = nil
	file_protob_signature_proto_depIdxs = nil
}
