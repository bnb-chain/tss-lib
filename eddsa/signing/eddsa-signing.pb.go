// Copyright Â© 2019 Binance
//
// This file is part of Binance. The full Binance copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: protob/eddsa-signing.proto

package signing

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a BROADCAST message sent to all parties during Round 1 of the EDDSA TSS signing protocol.
type SignRound1Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commitment    []byte                 `protobuf:"bytes,1,opt,name=commitment,proto3" json:"commitment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignRound1Message) Reset() {
	*x = SignRound1Message{}
	mi := &file_protob_eddsa_signing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignRound1Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRound1Message) ProtoMessage() {}

func (x *SignRound1Message) ProtoReflect() protoreflect.Message {
	mi := &file_protob_eddsa_signing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRound1Message.ProtoReflect.Descriptor instead.
func (*SignRound1Message) Descriptor() ([]byte, []int) {
	return file_protob_eddsa_signing_proto_rawDescGZIP(), []int{0}
}

func (x *SignRound1Message) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

// Represents a BROADCAST message sent to all parties during Round 2 of the EDDSA TSS signing protocol.
type SignRound2Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeCommitment  [][]byte               `protobuf:"bytes,1,rep,name=de_commitment,json=deCommitment,proto3" json:"de_commitment,omitempty"`
	ProofAlphaX   []byte                 `protobuf:"bytes,2,opt,name=proof_alpha_x,json=proofAlphaX,proto3" json:"proof_alpha_x,omitempty"`
	ProofAlphaY   []byte                 `protobuf:"bytes,3,opt,name=proof_alpha_y,json=proofAlphaY,proto3" json:"proof_alpha_y,omitempty"`
	ProofT        []byte                 `protobuf:"bytes,4,opt,name=proof_t,json=proofT,proto3" json:"proof_t,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignRound2Message) Reset() {
	*x = SignRound2Message{}
	mi := &file_protob_eddsa_signing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignRound2Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRound2Message) ProtoMessage() {}

func (x *SignRound2Message) ProtoReflect() protoreflect.Message {
	mi := &file_protob_eddsa_signing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRound2Message.ProtoReflect.Descriptor instead.
func (*SignRound2Message) Descriptor() ([]byte, []int) {
	return file_protob_eddsa_signing_proto_rawDescGZIP(), []int{1}
}

func (x *SignRound2Message) GetDeCommitment() [][]byte {
	if x != nil {
		return x.DeCommitment
	}
	return nil
}

func (x *SignRound2Message) GetProofAlphaX() []byte {
	if x != nil {
		return x.ProofAlphaX
	}
	return nil
}

func (x *SignRound2Message) GetProofAlphaY() []byte {
	if x != nil {
		return x.ProofAlphaY
	}
	return nil
}

func (x *SignRound2Message) GetProofT() []byte {
	if x != nil {
		return x.ProofT
	}
	return nil
}

// Represents a BROADCAST message sent to all parties during Round 3 of the EDDSA TSS signing protocol.
type SignRound3Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	S             []byte                 `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignRound3Message) Reset() {
	*x = SignRound3Message{}
	mi := &file_protob_eddsa_signing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignRound3Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRound3Message) ProtoMessage() {}

func (x *SignRound3Message) ProtoReflect() protoreflect.Message {
	mi := &file_protob_eddsa_signing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRound3Message.ProtoReflect.Descriptor instead.
func (*SignRound3Message) Descriptor() ([]byte, []int) {
	return file_protob_eddsa_signing_proto_rawDescGZIP(), []int{2}
}

func (x *SignRound3Message) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

var File_protob_eddsa_signing_proto protoreflect.FileDescriptor

const file_protob_eddsa_signing_proto_rawDesc = "" +
	"\n" +
	"\x1aprotob/eddsa-signing.proto\x12\x1cbinance.tsslib.eddsa.signing\"3\n" +
	"\x11SignRound1Message\x12\x1e\n" +
	"\n" +
	"commitment\x18\x01 \x01(\fR\n" +
	"commitment\"\x99\x01\n" +
	"\x11SignRound2Message\x12#\n" +
	"\rde_commitment\x18\x01 \x03(\fR\fdeCommitment\x12\"\n" +
	"\rproof_alpha_x\x18\x02 \x01(\fR\vproofAlphaX\x12\"\n" +
	"\rproof_alpha_y\x18\x03 \x01(\fR\vproofAlphaY\x12\x17\n" +
	"\aproof_t\x18\x04 \x01(\fR\x06proofT\"!\n" +
	"\x11SignRound3Message\x12\f\n" +
	"\x01s\x18\x01 \x01(\fR\x01sB\x0fZ\reddsa/signingb\x06proto3"

var (
	file_protob_eddsa_signing_proto_rawDescOnce sync.Once
	file_protob_eddsa_signing_proto_rawDescData []byte
)

func file_protob_eddsa_signing_proto_rawDescGZIP() []byte {
	file_protob_eddsa_signing_proto_rawDescOnce.Do(func() {
		file_protob_eddsa_signing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protob_eddsa_signing_proto_rawDesc), len(file_protob_eddsa_signing_proto_rawDesc)))
	})
	return file_protob_eddsa_signing_proto_rawDescData
}

var file_protob_eddsa_signing_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_protob_eddsa_signing_proto_goTypes = []any{
	(*SignRound1Message)(nil), // 0: binance.tsslib.eddsa.signing.SignRound1Message
	(*SignRound2Message)(nil), // 1: binance.tsslib.eddsa.signing.SignRound2Message
	(*SignRound3Message)(nil), // 2: binance.tsslib.eddsa.signing.SignRound3Message
}
var file_protob_eddsa_signing_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protob_eddsa_signing_proto_init() }
func file_protob_eddsa_signing_proto_init() {
	if File_protob_eddsa_signing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protob_eddsa_signing_proto_rawDesc), len(file_protob_eddsa_signing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protob_eddsa_signing_proto_goTypes,
		DependencyIndexes: file_protob_eddsa_signing_proto_depIdxs,
		MessageInfos:      file_protob_eddsa_signing_proto_msgTypes,
	}.Build()
	File_protob_eddsa_signing_proto = out.File
	file_protob_eddsa_signing_proto_goTypes = nil
	file_protob_eddsa_signing_proto_depIdxs = nil
}
