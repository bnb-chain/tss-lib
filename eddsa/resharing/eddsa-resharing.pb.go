// Copyright Â© 2019 Binance
//
// This file is part of Binance. The full Binance copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: protob/eddsa-resharing.proto

package resharing

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The Round 1 data is broadcast to peers of the New Committee in this message.
type DGRound1Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EddsaPubX     []byte                 `protobuf:"bytes,1,opt,name=eddsa_pub_x,json=eddsaPubX,proto3" json:"eddsa_pub_x,omitempty"`
	EddsaPubY     []byte                 `protobuf:"bytes,2,opt,name=eddsa_pub_y,json=eddsaPubY,proto3" json:"eddsa_pub_y,omitempty"`
	VCommitment   []byte                 `protobuf:"bytes,3,opt,name=v_commitment,json=vCommitment,proto3" json:"v_commitment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DGRound1Message) Reset() {
	*x = DGRound1Message{}
	mi := &file_protob_eddsa_resharing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DGRound1Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DGRound1Message) ProtoMessage() {}

func (x *DGRound1Message) ProtoReflect() protoreflect.Message {
	mi := &file_protob_eddsa_resharing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DGRound1Message.ProtoReflect.Descriptor instead.
func (*DGRound1Message) Descriptor() ([]byte, []int) {
	return file_protob_eddsa_resharing_proto_rawDescGZIP(), []int{0}
}

func (x *DGRound1Message) GetEddsaPubX() []byte {
	if x != nil {
		return x.EddsaPubX
	}
	return nil
}

func (x *DGRound1Message) GetEddsaPubY() []byte {
	if x != nil {
		return x.EddsaPubY
	}
	return nil
}

func (x *DGRound1Message) GetVCommitment() []byte {
	if x != nil {
		return x.VCommitment
	}
	return nil
}

// The Round 2 "ACK" is broadcast to peers of the Old Committee in this message.
type DGRound2Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DGRound2Message) Reset() {
	*x = DGRound2Message{}
	mi := &file_protob_eddsa_resharing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DGRound2Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DGRound2Message) ProtoMessage() {}

func (x *DGRound2Message) ProtoReflect() protoreflect.Message {
	mi := &file_protob_eddsa_resharing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DGRound2Message.ProtoReflect.Descriptor instead.
func (*DGRound2Message) Descriptor() ([]byte, []int) {
	return file_protob_eddsa_resharing_proto_rawDescGZIP(), []int{1}
}

// The Round 3 data is sent to peers of the New Committee in this message.
type DGRound3Message1 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Share         []byte                 `protobuf:"bytes,1,opt,name=share,proto3" json:"share,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DGRound3Message1) Reset() {
	*x = DGRound3Message1{}
	mi := &file_protob_eddsa_resharing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DGRound3Message1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DGRound3Message1) ProtoMessage() {}

func (x *DGRound3Message1) ProtoReflect() protoreflect.Message {
	mi := &file_protob_eddsa_resharing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DGRound3Message1.ProtoReflect.Descriptor instead.
func (*DGRound3Message1) Descriptor() ([]byte, []int) {
	return file_protob_eddsa_resharing_proto_rawDescGZIP(), []int{2}
}

func (x *DGRound3Message1) GetShare() []byte {
	if x != nil {
		return x.Share
	}
	return nil
}

// The Round 3 data is broadcast to peers of the New Committee in this message.
type DGRound3Message2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VDecommitment [][]byte               `protobuf:"bytes,1,rep,name=v_decommitment,json=vDecommitment,proto3" json:"v_decommitment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DGRound3Message2) Reset() {
	*x = DGRound3Message2{}
	mi := &file_protob_eddsa_resharing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DGRound3Message2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DGRound3Message2) ProtoMessage() {}

func (x *DGRound3Message2) ProtoReflect() protoreflect.Message {
	mi := &file_protob_eddsa_resharing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DGRound3Message2.ProtoReflect.Descriptor instead.
func (*DGRound3Message2) Descriptor() ([]byte, []int) {
	return file_protob_eddsa_resharing_proto_rawDescGZIP(), []int{3}
}

func (x *DGRound3Message2) GetVDecommitment() [][]byte {
	if x != nil {
		return x.VDecommitment
	}
	return nil
}

// The Round 4 "ACK" is broadcast to peers of the Old and New Committees from the New Committee in this message.
type DGRound4Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DGRound4Message) Reset() {
	*x = DGRound4Message{}
	mi := &file_protob_eddsa_resharing_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DGRound4Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DGRound4Message) ProtoMessage() {}

func (x *DGRound4Message) ProtoReflect() protoreflect.Message {
	mi := &file_protob_eddsa_resharing_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DGRound4Message.ProtoReflect.Descriptor instead.
func (*DGRound4Message) Descriptor() ([]byte, []int) {
	return file_protob_eddsa_resharing_proto_rawDescGZIP(), []int{4}
}

var File_protob_eddsa_resharing_proto protoreflect.FileDescriptor

const file_protob_eddsa_resharing_proto_rawDesc = "" +
	"\n" +
	"\x1cprotob/eddsa-resharing.proto\x12\x1ebinance.tsslib.eddsa.resharing\"t\n" +
	"\x0fDGRound1Message\x12\x1e\n" +
	"\veddsa_pub_x\x18\x01 \x01(\fR\teddsaPubX\x12\x1e\n" +
	"\veddsa_pub_y\x18\x02 \x01(\fR\teddsaPubY\x12!\n" +
	"\fv_commitment\x18\x03 \x01(\fR\vvCommitment\"\x11\n" +
	"\x0fDGRound2Message\"(\n" +
	"\x10DGRound3Message1\x12\x14\n" +
	"\x05share\x18\x01 \x01(\fR\x05share\"9\n" +
	"\x10DGRound3Message2\x12%\n" +
	"\x0ev_decommitment\x18\x01 \x03(\fR\rvDecommitment\"\x11\n" +
	"\x0fDGRound4MessageB\x11Z\x0feddsa/resharingb\x06proto3"

var (
	file_protob_eddsa_resharing_proto_rawDescOnce sync.Once
	file_protob_eddsa_resharing_proto_rawDescData []byte
)

func file_protob_eddsa_resharing_proto_rawDescGZIP() []byte {
	file_protob_eddsa_resharing_proto_rawDescOnce.Do(func() {
		file_protob_eddsa_resharing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protob_eddsa_resharing_proto_rawDesc), len(file_protob_eddsa_resharing_proto_rawDesc)))
	})
	return file_protob_eddsa_resharing_proto_rawDescData
}

var file_protob_eddsa_resharing_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_protob_eddsa_resharing_proto_goTypes = []any{
	(*DGRound1Message)(nil),  // 0: binance.tsslib.eddsa.resharing.DGRound1Message
	(*DGRound2Message)(nil),  // 1: binance.tsslib.eddsa.resharing.DGRound2Message
	(*DGRound3Message1)(nil), // 2: binance.tsslib.eddsa.resharing.DGRound3Message1
	(*DGRound3Message2)(nil), // 3: binance.tsslib.eddsa.resharing.DGRound3Message2
	(*DGRound4Message)(nil),  // 4: binance.tsslib.eddsa.resharing.DGRound4Message
}
var file_protob_eddsa_resharing_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protob_eddsa_resharing_proto_init() }
func file_protob_eddsa_resharing_proto_init() {
	if File_protob_eddsa_resharing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protob_eddsa_resharing_proto_rawDesc), len(file_protob_eddsa_resharing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protob_eddsa_resharing_proto_goTypes,
		DependencyIndexes: file_protob_eddsa_resharing_proto_depIdxs,
		MessageInfos:      file_protob_eddsa_resharing_proto_msgTypes,
	}.Build()
	File_protob_eddsa_resharing_proto = out.File
	file_protob_eddsa_resharing_proto_goTypes = nil
	file_protob_eddsa_resharing_proto_depIdxs = nil
}
