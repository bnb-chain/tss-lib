// This file will re-export generated protobuf types.
// It will be populated by build.rs output.

// Example (will be generated by prost-build):
// include!(concat!(env!("OUT_DIR"), "/example.package.rs"));

// Include the generated code for each proto file.
// The filenames here should match the 'package' name in your .proto files,
// replacing dots with underscores if necessary.
// Add an include! line for each generated file.

// include!(concat!(env!("OUT_DIR"), "/ecdsa_keygen.rs")); 
// include!(concat!(env!("OUT_DIR"), "/ecdsa_resharing.rs"));
// include!(concat!(env!("OUT_DIR"), "/ecdsa_signing.rs"));
// include!(concat!(env!("OUT_DIR"), "/eddsa_keygen.rs"));
// include!(concat!(env!("OUT_DIR"), "/eddsa_resharing.rs"));
// include!(concat!(env!("OUT_DIR"), "/eddsa_signing.rs"));
// include!(concat!(env!("OUT_DIR"), "/message.rs"));
// include!(concat!(env!("OUT_DIR"), "/signature.rs"));

// TODO: Verify the actual generated filenames in target/debug/build/tss-lib-rust-*/out/ 
//       and update the include! lines accordingly.

// If the .proto files define packages (e.g., package tss;), the generated
// module structure might be different. You might need to adjust the includes
// or use `pub use generated_module_name::*`.

// For now, leave this empty. `cargo build` will generate the files. 